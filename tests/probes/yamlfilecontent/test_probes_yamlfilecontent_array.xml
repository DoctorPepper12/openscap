<?xml version="1.0"?>
<oval_definitions xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:unix-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" xmlns:lin-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd">

  <generator>
    <oval:product_name>yamlfilecontent</oval:product_name>
    <oval:product_version>1.0</oval:product_version>
    <oval:schema_version>5.11.3</oval:schema_version>
    <oval:timestamp>2020-02-13T00:00:00-00:00</oval:timestamp>
  </generator>

  <definitions>

    <definition class="compliance" version="1" id="oval:0:def:1"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_indexed_array" test_ref="oval:0:tst:1"/>
        <criterion comment="get_range_array" test_ref="oval:0:tst:2"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:2"> <!-- comment="error" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_non_scalar_array" test_ref="oval:0:tst:3"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:3"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_2_dim_array" test_ref="oval:0:tst:4"/>
        <criterion comment="get_2_dim_array_set" test_ref="oval:0:tst:5"/>
      </criteria>
    </definition>

  </definitions>

  <tests>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:1" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:1"/>
      <ind-def:state state_ref="oval:0:ste:1"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:2" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:2"/>
      <ind-def:state state_ref="oval:0:ste:2"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:3" check="all" comment="error">
      <ind-def:object object_ref="oval:0:obj:3"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:4" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:4"/>
      <ind-def:state state_ref="oval:0:ste:3"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:5" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:5"/>
      <ind-def:state state_ref="oval:0:ste:3"/>
    </ind-def:yamlfilecontent_test>

  </tests>

  <objects>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:1">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.spec.outputs[2].name</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:2">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.spec.outputs[:].name</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:3">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.spec.outputs[0]</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:4">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.arrs[:][:]</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:5">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.arrs</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

  </objects>

  <states>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:1">
      <ind-def:value datatype="record">
        <field name="#" datatype="string">secureforward-offcluster</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:2">
      <ind-def:value datatype="record">
        <field name="#" datatype="string" var_ref="oval:0:var:2" var_check="at least one" entity_check="at least one"/>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:3">
      <ind-def:value datatype="record">
        <field name="#" datatype="int" var_ref="oval:0:var:3" var_check="at least one" entity_check="at least one"/>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

  </states>

  <variables>

    <local_variable comment="variable with two values" datatype="string" version="1" id="oval:0:var:2">
        <!-- The use of split should force creation of a local variable with two values
             NOTE: Wildly untested! -->
      <split delimiter="|">
        <literal_component>elasticsearch|elasticsearch-insecure</literal_component>
      </split>
    </local_variable>

    <local_variable comment="variable with three values" datatype="int" version="1" id="oval:0:var:3">
      <split delimiter="|">
        <literal_component>1|2|3|4|5|6</literal_component>
      </split>
    </local_variable>

  </variables>
</oval_definitions>
