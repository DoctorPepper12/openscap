<?xml version="1.0"?>
<oval_definitions xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:unix-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix" xmlns:lin-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux" xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5#unix unix-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#independent independent-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5#linux linux-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-definitions-5 oval-definitions-schema.xsd http://oval.mitre.org/XMLSchema/oval-common-5 oval-common-schema.xsd">

  <generator>
    <oval:product_name>yamlfilecontent</oval:product_name>
    <oval:product_version>1.0</oval:product_version>
    <oval:schema_version>5.11.3</oval:schema_version>
    <oval:timestamp>2020-02-13T00:00:00-00:00</oval:timestamp>
  </generator>

  <definitions>

    <definition class="compliance" version="1" id="oval:0:def:1"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_root_scalar" test_ref="oval:0:tst:1"/>
        <criterion comment="get_nested_scalar" test_ref="oval:0:tst:2"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:2"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_non_scalar" test_ref="oval:0:tst:3"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:3"> <!-- comment="false" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="get_non_existing_scalar" test_ref="oval:0:tst:4"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:4"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="multiple_mapping_values" test_ref="oval:0:tst:5"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:5"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="map_target" test_ref="oval:0:tst:6"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:6"> <!-- comment="false" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="missing_map_keys" test_ref="oval:0:tst:7"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:7"> <!-- comment="error" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="array_of_maps" test_ref="oval:0:tst:8"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:8"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="array_of_maps_of_array" test_ref="oval:0:tst:9"/>
      </criteria>
    </definition>

    <definition class="compliance" version="1" id="oval:0:def:9"> <!-- comment="true" -->
      <metadata>
        <title></title>
        <description></description>
      </metadata>
      <criteria operator="AND">
        <criterion comment="array_of_maps_of_array_2" test_ref="oval:0:tst:10"/>
      </criteria>
    </definition>
  </definitions>

  <tests>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:1" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:1"/>
      <ind-def:state state_ref="oval:0:ste:1"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:2" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:2"/>
      <ind-def:state state_ref="oval:0:ste:2"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:3" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:3"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:4" check="all" comment="false">
      <ind-def:object object_ref="oval:0:obj:4"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:5" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:5"/>
      <ind-def:state state_ref="oval:0:ste:5"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:6" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:6"/>
      <ind-def:state state_ref="oval:0:ste:6"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:7" check="all" comment="false">
      <ind-def:object object_ref="oval:0:obj:7"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:8" check="all" comment="error">
      <ind-def:object object_ref="oval:0:obj:8"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:9" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:9"/>
      <ind-def:state state_ref="oval:0:ste:9"/>
    </ind-def:yamlfilecontent_test>

    <ind-def:yamlfilecontent_test version="1" id="oval:0:tst:10" check="all" comment="true">
      <ind-def:object object_ref="oval:0:obj:10"/>
      <ind-def:state state_ref="oval:0:ste:10"/>
    </ind-def:yamlfilecontent_test>
  </tests>

  <objects>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:1">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.kind</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:2">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.metadata.namespace</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:3">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.metadata</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:4">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.doesnt.exist</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:5">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.status.conditions[:]['status','type']</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:6">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.status.conditions[:]</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:7">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.status.conditions[:]['nonexistent','dummy']</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:8">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.spec.outputs</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:9">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.items[:]['requiredDropCapabilities','name','q','z'][:]</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>

    <ind-def:yamlfilecontent_object version="1" id="oval:0:obj:10">
      <ind-def:path>/tmp</ind-def:path>
      <ind-def:filename>openshift-logging.yaml</ind-def:filename>
      <ind-def:yamlpath>.items[:].requiredDropCapabilities[:]</ind-def:yamlpath>
    </ind-def:yamlfilecontent_object>
  </objects>

  <states>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:1">
      <ind-def:value datatype="record">
        <field name="#" datatype="string">LogForwarding</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:2">
      <ind-def:value datatype="record">
        <field name="#" datatype="string">openshift-logging</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:5">
      <ind-def:value datatype="record" entity_check="at least one">
        <field name="status" datatype="string">True</field>
        <field name="type" datatype="string">Upgradeable</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:6">
      <ind-def:value datatype="record" entity_check="at least one">
        <field name="status" datatype="string">True</field>
        <field name="reason" datatype="string">AsExpected</field>
        <field name="type" datatype="string">Upgradeable</field>
        <field name="last^transition^time" datatype="string" operation="pattern match">^\d+-\d+-.*Z$</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:9">
      <ind-def:value datatype="record" entity_check="at least one">
        <field name="required^drop^capabilities" operation="pattern match" entity_check="at least one">^KILL$</field>
        <field name="name" entity_check="at least one">Name</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

    <ind-def:yamlfilecontent_state version="1" id="oval:0:ste:10">
      <ind-def:value datatype="record" entity_check="at least one">
        <field name="#" operation="pattern match" entity_check="at least one">^KILL$</field>
      </ind-def:value>
    </ind-def:yamlfilecontent_state>

  </states>

</oval_definitions>
